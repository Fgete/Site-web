:root{
	--groundWidth: 750px;
}

body{
	margin: 0;
	padding: 0;

	width: 100vw;
	height: 100vh;

	overflow-x: hidden;
	overflow-y: hidden;
}

#UI{
	position: absolute;

	display: flex;
	flex-direction: column;
	justify-content: space-between;
	align-items: center;

	width: 100vw;
	height: 100vh;

	pointer-events: none;
}

.transition{
	transition: .5s;
}

header{
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	width: 100vw;
	height: 10vh;

	font-size: 3em;
	color: white;
	text-shadow: 0px 0px 30px rgba(150, 150, 150, 1);

	background: linear-gradient(0deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 100%);
}

/* --- USER PANEL --- */

footer{
	display: flex;
	flex-direction: row;
	justify-content: space-around;
	align-items: center;

	width: 100vw;
	height: 15vh;

	background: linear-gradient(0deg, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 100%);

	pointer-events: all;
}

/* --- BUTTON --- */

.shadowButton{
	box-shadow: 0px 0px 50px rgba(200, 200, 200, 1);
}

.circleButton{
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;

	width: 8vh;
	height: 8vh;

	border-radius: 50%;

	box-shadow: 0px 0px 20px rgba(150, 150, 150, 1);
	background: linear-gradient(180deg, rgba(255, 255, 255, 1) 0%, rgba(220, 220, 220, 1) 100%);

	cursor: pointer;
}

.circleButton div{
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;

	width: 7vh;
	height: 7vh;

	border-radius: 50%;

	background: linear-gradient(0deg, rgba(255, 255, 255, 1) 0%, rgba(220, 220, 220, 1) 100%);
}

.buttonText{
	color: rgba(200, 200, 200, 1);
	font-size: 3vh;
}

.buttonText:hover{
	color: darkorange;
}

/* --- GAME PANEL --- */

#gamePanel{
	position: absolute;
	
	width: 100vw;
	height: 100vh;

	perspective: 1000px;

	background: linear-gradient(0deg, rgba(205,205,205,1) 20%, rgba(166,189,212,1) 47%, rgba(185,219,255,1) 53%, rgba(255,255,255,1) 100%);
}

/* --- 3D --- */

#origin{
	left: 50vw;
	top: 50vh;

	transform: translateZ(-100px) rotateX(-70deg);
}

.perspective{
	backface-visibility: visible;
	transform-style: preserve-3d;
	perspective-origin: 100% 100%;
}

.absolute{
	position: absolute;
}

/* --- CUBE --- */

.cubeCenter{
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	pointer-events: none;
}

.cubeFace{
	position: absolute;

	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;

	width: calc(var(--groundWidth)/3);
	height: calc(var(--groundWidth)/3);

	color: rgba(100, 100, 100, 0);
	background-color: rgba(100, 100, 100, 0);
	box-shadow: 0px 0px 50px rgba(255, 255, 255, 0);
	border: dashed 3px rgba(252,176,69,1);
}

.cubeFaceTop{
	transform: translateY(calc(var(--groundWidth)/-6)) rotateX(90deg);
}

.cubeFaceBottom{
	transform: translateY(calc(var(--groundWidth)/6)) rotateX(-90deg);
}

.cubeFaceLeft{
	transform: translateX(calc(var(--groundWidth)/-6)) rotateY(-90deg);
}

.cubeFaceRight{
	transform: translateX(calc(var(--groundWidth)/6)) rotateY(90deg);
}

.cubeFaceFront{
	transform: translateZ(calc(var(--groundWidth)/-6));
}

.cubeFaceBack{
	transform: translateZ(calc(var(--groundWidth)/6));
}

/* --- GROUND --- */

#ground{
	display: flex;
	flex-direction: column;
	justify-content: space-around;
	align-items: center;

	width: var(--groundWidth);
	height: var(--groundWidth);

	top: calc(var(--groundWidth)/-2);
	left: calc(var(--groundWidth)/-2);

	transform: rotateX(90deg) rotateZ(-90deg);

	border-radius: 20px;
	background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);
	box-shadow: 0px 0px 20px rgba(0, 0, 0, .5);
}

#ground div{
	display: flex;
	flex-direction: row;
	justify-content: space-around;
	align-items: center;

	width: 100%;
}

#ground div div{
	width: calc(var(--groundWidth)/3);
	height: calc(var(--groundWidth)/3);

	border-radius: 20px;
	box-shadow: 0px 0px 20px rgba(0, 0, 0, .5);

	cursor: pointer;
}

#ground div div:hover{
	background-color: rgba(255, 255, 255, .5);
	box-shadow: 0px 0px 20px rgba(255, 255, 255, 1);
}

/* --- ELEMENTS --- */

#cube0{
	--posX: 0;
	--posY: calc(var(--groundWidth)/-6);
	--posZ: 0;

	transform: translate3d(var(--posX), var(--posY), var(--posZ));
}